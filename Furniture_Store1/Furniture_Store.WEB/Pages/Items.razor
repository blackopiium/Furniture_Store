@page "/items"
@page "/items/{id}"
@inject Services.ItemsService itemService
@using ViewModels
<h1>Items</h1>
@if (items == null)
{
    <p><em>Null</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>CategoryId</th>
                <th>Price</th>
                <th>FactoryId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.CategoryId</td>
                    <td>@item.Price</td>
                    <td>@item.FactoryId</td>
                </tr>
            }
        </tbody>
    </table>
}
@code{
    private int _id;
    [Parameter]
    public string Id
    {
        get
        {
            return _id.ToString();
        }
        set
        {
            try
            {
                _id = Int32.Parse(value);
            }
            catch
            {
                _id = 0;
            }
        }
    }

    List<ItemViewModel> items;
    protected override async Task OnInitializedAsync()
    {
        int id = Int32.Parse(Id);
        if (id == 0)
            items= await itemService.GetAllItems();
        else if (id > 0)
        {
            ItemViewModel item = await itemService.GetItemById(id);
            if (item != null)
            {
                items = new List<ItemViewModel>();
                items.Add(item);
            }
        }

    }
}
